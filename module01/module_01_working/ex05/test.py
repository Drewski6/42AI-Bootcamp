# pylint: disable=no-name-in-module
# pylint: disable=no-self-argument
from the_bank import Bank
from account import Account

bank = Bank()
my_account = Account("my_account", zip_arg1="arg1", string2="arg2", string3="arg3")
b_account = Account("b_account", b_string1="arg1", string2="arg2", string3="arg3")
even_account = Account("even_account", even_str="even_str", string3="arg3")
nn_account = Account("nn_account")
nn_str_account = Account("nn_str_account")
nid_account = Account("nid_account", zip_arg="arg", string="hi")
idn_int_account = Account("idn_int_account", zip_arg="arg")
nvalue_account = Account("nvalue_account", zip_arg="arg", string="hi")
value_float_account = Account("value_float_account", zip_arg="arg", )
value_int_account = Account("value_int_account", zip_arg="arg", )
valuen_i_f_account = Account("valuen_i_f_account", zip_arg="arg", )

print("adding my_account:", end='\t')
print(bank.add(my_account))
print("adding b_account:", end='\t')
print(bank.add(b_account))
print("adding even_account:", end='\t')
print(bank.add(even_account))
print("adding nn_account:", end='\t')
print(bank.add(nn_account))
print("adding nn_str_account:", end='\t')
print(bank.add(nn_str_account))
print("adding nid_account:", end='\t')
print(bank.add(nid_account))
print("adding idn_int_account:", end='\t')
print(bank.add(idn_int_account))
print("adding nvalue_account:", end='\t')
print(bank.add(nvalue_account))
print("adding value_float_account:", end='\t')
print(bank.add(value_float_account))
print("adding value_int_account:", end='\t')
print(bank.add(value_int_account))
print("adding valuen_i_f_account:", end='\t')
print(bank.add(valuen_i_f_account))
print("adding 'hi':", end='\t')
print(bank.add("hi"))
print("fix_account on my_account", end='\t')
print(bank.fix_account("my_account"))
print("fix_account on b_account", end='\t')
print(bank.fix_account("b_account"))
print("fix_account on even_account", end='\t')
print(bank.fix_account("even_account"))
del nn_account.name
print("fix_account on nn_account", end='\t')
print(bank.fix_account("nn_account"))
nn_str_account.name = 234
print("fix_account on nn_str_account", end='\t')
print(bank.fix_account("nn_str_account"))
del nid_account.id
print("fix_account on nid_account", end='\t')
print(bank.fix_account("nid_account"))
idn_int_account.id = "hi"
print("fix_account on idn_int_account", end='\t')
print(bank.fix_account("idn_int_account"))
del nvalue_account.value
print("fix_account on nvalue_account", end='\t')
print(bank.fix_account("nvalue_account"))
value_int_account.value = int(8)
print("fix_account on value_int_account", end='\t')
print(bank.fix_account("value_int_account"))
value_float_account.value = float(8.0)
print("fix_account on value_float_account", end='\t')
print(bank.fix_account("value_float_account"))
valuen_i_f_account.value = "hi"
print("fix_account on valuen_i_f_account", end='\t')
print(bank.fix_account("valuen_i_f_account"))

print("accounts that are not corrupt: ")
#bank.debug_print_account_list()